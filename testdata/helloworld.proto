// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/api/context.proto";
import "google/rpc/code.proto";
import "gogoproto/gogo.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "validate/validate.proto";

option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";
option go_package = "testing/helloworld";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  option (gogoproto.stable_marshaler) = true;

  string name = 1 [(validate.rules).string.min_len=1];

  google.api.Context context = 2;
  google.rpc.Code code = 3;
  k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 4;
  k8s.io.api.core.v1.EnvVar env = 5;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}